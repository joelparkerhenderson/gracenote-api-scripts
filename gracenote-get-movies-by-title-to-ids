#!/bin/sh

## 
# Gracenote API script to get movies by title, and output each id.
#
# Syntax:
#
#     gracenote-get-movies-by-title-to-ids <title>
#
# Example:
#
#     $ export GRACENOTE_API_KEY=123456679
#     $ gracenote-get-movies-by-title-to-ids "Atomic Blonde"
#
#
# ## Details
#
# The title string is an exact match, not a partial match.
# If you prefer partial matches, then you can use the API
# to accomplish that.
#
# In case of multiple matches, this script outputs each id,
# sorted by the movies' release dates, in ascending order.
# So if you want the newest release, use the last output.
#
#
# ## Tracking
#
#   * Command: gracenote-get-movies-by-title-to-ids
#   * Version: 3.2.0
#   * Created: 2017-08-22
#   * Updated: 2017-09-07
#   * License: GPL
#   * Contact: Joel Parker Henderson (joel@joelparkerhenderson.com)
##

## Start
set -euf
out() { printf %s\\n "$*" ; }
err() { >&2 printf %s\\n "$*" ; }
die() { >&2 printf %s\\n "$*" ; exit 1 ; }
cmd() { command -v $1 >/dev/null 2>&1 ; }
die_cmd() { die "Command needed: $1" ; }
die_var() { die "Variable needed: $1" ; }

## Args
title="${1:-}"

## Cmds
CURL=${CURL:-curl}; cmd "$CURL" || die_cmd "$CURL"
JQ=${JQ:-jq}; cmd "$JQ" || die_cmd "$JQ"

## Preflight
[ -z ${GRACENOTE_API_KEY+x} ] && die_var GRACENOTE_API_KEY
[ -z "$title" ] && die_var title

## Main
"$CURL" -sSLG "http://data.tmsapi.com/v1.1/programs/search" \
  --data-urlencode "api_key=$GRACENOTE_API_KEY" \
  --data-urlencode "entityType=movie" \
  --data-urlencode "q=$title" \
  --data-urlencode "queryFields=title" |
"$JQ" -r ".hits 
  | map(select(.program.title==\"$title\"))
  | sort_by(.program.releaseYear) 
  | map(.program.tmsId)
  | .[]"
