#!/bin/sh

## 
# Gracenote API script to get theaters by name and location, and output each id.
#
# Syntax:
#
#     gracenote-get-theaters-by-name-and-location-to-id <name> [latitude longitude] [radius] [units]
#
# Example:
#
#     $ export GRACENOTE_API_KEY=123456679
#     $ gracenote-get-theaters-by-name-and-location-to-id "AMC Empire 25" 40.7527 -73.9772
#
# Defaults:
#
#    * `latitude`: $LATITUDE
#    * `longitude`: $LONGITUDE
#    * `radius`: 1
#    * `units`: `km` a.k.a. kilometers.
#
# ## Tracking
#
#   * Command: gracenote-get-theaters-by-name-and-location-to-id
#   * Version: 3.2.0
#   * Created: 2017-08-22
#   * Updated: 2017-09-07
#   * License: GPL
#   * Contact: Joel Parker Henderson (joel@joelparkerhenderson.com)
##

## Start
set -euf
out() { printf %s\\n "$*" ; }
err() { >&2 printf %s\\n "$*" ; }
die() { >&2 printf %s\\n "$*" ; exit 1 ; }
cmd() { command -v $1 >/dev/null 2>&1 ; }
die_cmd() { die "Command needed: $1" ; }
die_var() { die "Variable needed: $1" ; }

## Args
name="${1:-}"
latitude="${2:-$LATITUDE}"
longitude="${3:-$LONGITUDE}"
radius="${4:-1}"
units="${5:-km}"

## Cmds
CURL=${CURL:-curl}; cmd "$CURL" || die_cmd "$CURL"
JQ=${JQ:-jq}; cmd "$JQ" || die_cmd "$JQ"

## Preflight
[ -z ${GRACENOTE_API_KEY+x} ] && die_var GRACENOTE_API_KEY
[ -z "$name" ] && die_var name
[ -z "$latitude" ] && die_var latitude
[ -z "$longitude" ] && die_var longitude
[ -z "$radius" ] && die_var radius
[ -z "$units" ] && die_var units

## Main
"$CURL" -sSLG "http://data.tmsapi.com/v1.1/theatres" \
  --data-urlencode "api_key=$GRACENOTE_API_KEY" \
  --data-urlencode "lat=$latitude" \
  --data-urlencode "lng=$longitude" \
  --data-urlencode "radius=$radius" \
  --data-urlencode "units=$units" |
"$JQ" -r ".[] 
  | select(.name==\"$name\") 
  | .theatreId"
